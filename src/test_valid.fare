int myFunction(int a, int b) {
    return a - b;
}

int a = myFunction(5, 2);

boolean t = true || false;
boolean f = 1 >= 2;

Map<int, int> map = [[1: 100, 2: 200]];

int b;
if (t && f) {
    b = map.get(1);
} else {
    b = map.get(2);
}

Range testRange = ['t'];
Range range = ['b','c'] + ['w'-'z'] + testRange;
Range d = range + testRange;
State state = $"Erster";
Transition transition = state - - range - - > $"End"^a;
FA fa = <$"Start"^1, { transition }>;

Range i = ['a'-'c', 'f', 'x'-'z'];
Range j = ['b'-'c', 'e'-'g'];
Range k = i^j;

String s = "abcdefgahc";
int x = s.length();
char charAt = s.charAt(2);
boolean contains = map.containsKey(2);
boolean doesNotContain = map.containsKey(3);
boolean rangeContains = i.contains('f');
boolean rangeContains2 = i.contains('b');
boolean rangeNotContains = i.contains('d');

Set<Transition> s2 = fa.transitions($"Erster");

Transition transition2 = state - - k - - > $"End"^b;

int durch = 10 / 2;
RA regex = ยงa*b(13)?['b','c']ยง;

return fa + transition2;
