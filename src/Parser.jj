options {
    STATIC = false;
    DEBUG_PARSER = true;
}

PARSER_BEGIN(Parser)

public class Parser {

}
PARSER_END(Parser)

// Lexer
TOKEN : {
    "+" | "-" | "*" | "/" | "%" | "++" | "--" | "&&" | "||" | "|" | "!" | "^"| "=" | "," | "."
    | "[" | "]" | "[]" | "[[" | "]]" | "(" | ")" | "<" | ">" | "{" | "}" | ";" | "$"
    | "true" | "false" | "if" | "else" | "while" | "return"
    | <Type : "Range" | "State" | "Transition" | "FA" | "RA" |"int" | "double" | "char" | "boolean">
    | "Set" | "Map"
    | <Identifier : ["A"-"Z", "a"-"z", "_"](["A"-"Z", "a"-"z", "_", "0" - "9"])*>
    | <CharLiteral : "'" ["A"-"Z", "a"-"z", "?", "!"] "'">
    | <StringLiteral : "\"" ["A"-"Z", "a"-"z", "_"](["A"-"Z", "a"-"z", "_", "0"-"9"])* "\"">
    | <IntegerLiteral : "0" | (["1"-"9"] (["0"-"9"])*)>
    | <DoubleLiteral : <IntegerLiteral> "." (["0"-"9"])* | "." (["0"-"9"])+>
    | <RegexLiteral : "/" (<StringLiteral> | <CharLiteral> | "(" | ")" | "[" | "]" | "+" | "*" | "|")+ "/" >
}

SKIP : {
    " " | "\t" | "\n" | "\r"
    | <Comment: "//" (~["\n"])*>
}

// Parser

// CU -> (decl | stmnt)*
void cu(): {} {

}


